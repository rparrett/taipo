[env]
ENV_DIR = {source="${CARGO_MAKE_PROFILE}", default_value = "debug", mapping = {release = "release"}}
CARGO_TARGET_DIR = {value = "target", condition = {env_not_set = ["CARGO_TARGET_DIR"]}}
CARGO_WASM_PATH = "${CARGO_TARGET_DIR}/wasm32-unknown-unknown/${ENV_DIR}/${CARGO_MAKE_CRATE_NAME}.wasm"
CARGO_MANIFEST_DIR = "${CARGO_MAKE_WORKING_DIRECTORY}"
PORT=4000

[env.release]
CARGO_RELEASE_ARGS = "--release"

[tasks.show-env]
command = "env"

[tasks.watch]
run_task = [
	{ name = "bindgen" },
]
watch = true

[tasks.build]
args = ["build", "--target", "wasm32-unknown-unknown", "@@split(CARGO_RELEASE_ARGS, )"]
command = "cargo"

[tasks.bindgen]
install_crate = {crate_name = "wasm-bindgen-cli", binary = "wasm-bindgen", test_arg="--help"}
args = ["--out-dir", "wasm", "--out-name", "bevy_game", "--target", "web", "--no-typescript", "${CARGO_WASM_PATH}"]
command = "wasm-bindgen"
dependencies = ["build"]

[tasks.static]
script = '''
cp -r assets wasm/
'''
dependencies = ["bindgen"]

[tasks.serve]
install_crate = {crate_name = "microserver", binary = "microserver", test_arg="--help"}
command = "microserver"
args = ["--port", "${PORT}", "--no-spa", "wasm/"]
dependencies = ["static"]

[tasks.bundle]
script = "rm -f wasm.zip && pushd wasm && zip -r -X ../wasm.zip . && popd"
dependencies = ["static"]

[tasks.test]
disabled = true